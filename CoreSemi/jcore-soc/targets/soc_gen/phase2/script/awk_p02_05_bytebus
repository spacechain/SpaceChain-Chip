BEGIN {
  state = 0;
  entity = "";
  count_generic = 0;
  count_port = 0;
  soc_gen_comment1 = "-- ************************************";
  soc_gen_comment2 =    "******************************";
  soc_gen_comment3 = "-- This file is generated by soc_gen and will ";
  soc_gen_comment4 = "be overwritten next time";
  soc_gen_comment5 = "-- the tool is run. See soc_top/README for ";
  soc_gen_comment6 = "information on running soc_gen.";

  printf("%s%s\n", soc_gen_comment1, soc_gen_comment2);
  printf("%s%s\n", soc_gen_comment1, soc_gen_comment2);
  printf("%s%s\n", soc_gen_comment3, soc_gen_comment4);
  printf("%s%s\n", soc_gen_comment5, soc_gen_comment6);
  printf("%s%s\n", soc_gen_comment1, soc_gen_comment2);
  printf("%s%s\n", soc_gen_comment1, soc_gen_comment2);
  printf("%s%s\n", soc_gen_comment1, soc_gen_comment2);
}
{
  if(NR == 1) {
    instance_name = $1;
    arch_name = $3;
  }
  else if (state < 3) {
    if($1 == "entity") {
      printf("entity %s_slave_process is\n", $2);
      entity = $2;
    }
    else if(($1 == "clk")     || ($1 == "clk_sys") ||
            ($1 == "clk_cpu") || ($1 == "clk_bus")) {
      print $0;
      print "      clk_0_5x : in std_logic;"
      clk_sys_port = $1;
    }
    else if(($1 == "rst") || ($1 == "rst_i")) {
      print $0;
      rst_port = $1;
    }
    else if(($1 == "end") || ($1 == "end;")) {
      print "end entity;";
      state = 3;
    }
    else {
      print $0;
    }

    if($1 == "generic") {
      if($4 == ":") {
        generic[count_generic] = $3;
        count_generic++;
      }
      state = 1;
    }
    else if($1 == "port") {
      state = 2;
    }

    if((state == 1) && ($2 == ":")) {
      generic[count_generic] = $1;
      count_generic++;
    }
    if((state == 2) && ($2 == ":")) {
      port[count_port] = $1;
      count_port++;
    }
  }
}
END {

  print "";
  printf( "architecture bytebus of %s_slave_process is\n", entity);
  print "  signal db_word_o : cpu_data_o_t;";
  print "  signal db_word_i : cpu_data_i_t;";
  print "begin";
  printf( "    %s : entity work.%s(%s)\n", 
     instance_name , entity, arch_name);
  if(count_generic > 0) {
    print "        generic map (";
    for(i = 0; i < count_generic; i++) {
      if(i == (count_generic - 1)) {
        print "           ", generic[i], "=>", generic[i];
      }
      else {
        print "           ", generic[i], "=>", generic[i], ",";
      }
    }
    print "        )";
  }
  print "        port map (";
  for(i = 0; i < count_port; i++) {
    if     (port[i] == "db_i") { sig = "db_word_o";}
    else if(port[i] == "db_o") { sig = "db_word_i";}
    else                       { sig = port[i]; }
    if(i == (count_port - 1)) {
      print "           ", port[i], "=>", sig;
    }
    else {
      print "           ", port[i], "=>", sig, ",";
    }
  }
  print "        );";
  print "";
  print "   slave_adapter : entity work.bussizesa(rtl)";
  print "        port map (";
  printf( "            rst => %s ,\n", rst_port);
  printf( "            clk => %s ,\n", clk_sys_port);
  print "            clk_half => clk_0_5x,";
  print "            db_a_o => db_i ,";
  print "            db_a_i => db_o ,";
  print "            db_b_o => db_word_o,";
  print "            db_b_i => db_word_i";
  print "        );";
  print "end bytebus;";
}
